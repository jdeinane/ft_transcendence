services:
  backend:
    image: ft_transcendence_backend
    build:
      context: .
      dockerfile: ./dockers/django/Dockerfile
    pull_policy: never
    restart: always
    env_file:
      - ./dockers/.env.dev
    volumes:
      - ./backend:/app/backend
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:8000/${POSTGRES_DB}
      - ENVIRONMENT=production
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
    networks:
      - backend
      - database

  postgres:
    build:
      context: ./dockers/postgres
      dockerfile: Dockerfile
    pull_policy: never
    restart: always
    env_file:
      - ./dockers/.env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dockers/postgres/conf/50-server.cnf:/etc/postgresql/postgresql.conf
    networks:
      - database

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=table
    ports:
      - 9000:8080
    depends_on:
      - postgres
    networks:
      - database

  nginx:
    build:
      context: ./dockers/nginx
      dockerfile: Dockerfile
    pull_policy: never
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend

volumes:
  postgres_data:
  avatar:

networks:
  frontend:
  backend:
  database:
