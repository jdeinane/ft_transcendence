services:
  backend:
    build:
      context: .
      dockerfile: ./dockers/django/Dockerfile
    pull_policy: never
    restart: always
    env_file:
      - ./dockers/.env.dev
    volumes:
      - ./backend:/app/backend
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:8000/${POSTGRES_DB}
      ENVIRONMENT: production
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - postgres
    networks:
      - backend
      - database

  postgres:
    image: ft_transcendence_postgres
    build:
      context: .
      dockerfile: ./dockers/postgres/Dockerfile
    pull_policy: never
    restart: always
    env_file:
      - ./dockers/.env.dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dockers/postgres/postgres.conf:/etc/postgresql/postgresql.conf
    networks:
      - database

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=table
    ports:
      - 9000:8080
    depends_on:
      - postgres
    networks:
      - database

  nginx:
    image: ft_transcendence_nginx
    build:
      context: .
      dockerfile: ./dockers/nginx/Dockerfile
    pull_policy: never
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./dockers/nginx/nginx.cnf:/etc/nginx/conf.d/default.conf
    networks:
      - frontend

volumes:
  postgres_data:
  avatar:

networks:
  frontend:
  backend:
  database:
