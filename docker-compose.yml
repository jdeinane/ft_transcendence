version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    build:
      context: .
      dockerfile: dockers/postgres/Dockerfile
    env_file: dockers/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PSQL_USER}"]
      interval: 5s
      timeout: 1s
      retries: 10
      start_period: 5s

  backend:
    image: tr_backend
    container_name: backend
    build:
      context: .
      dockerfile: dockers/django/Dockerfile
    env_file: dockers/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    restart: always
    command: ["gunicorn", "rest.wsgi:application", "--bind", "0.0.0.0:8000"]

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: dockers/nginx/Dockerfile
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "8080:80"
    networks:
      - backend
    restart: on-failure:5

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
